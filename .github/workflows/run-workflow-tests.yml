name: Run Xircuits Workflows Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: "*"
  workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    env:
      TEST_XIRCUITS: |
        examples/mqtt_sample.xircuits

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Create virtual environment
      run: |
        python -m venv venv
        echo "${{ github.workspace }}/venv/bin" >> $GITHUB_PATH
        source venv/bin/activate
        pip install --upgrade pip

    - name: Install dependencies
      run: |
        pip install xircuits
        pip install paho-mqtt==1.6.1

    - name: Install mosquitto MQTT
      run: |
        sudo apt-get update
        sudo apt-get install -y mosquitto=2.0.11 mosquitto-clients=2.0.11
        sudo systemctl enable mosquitto
        sudo systemctl start mosquitto

    - name: Configure Mosquitto
      run: |
        echo "listener 1883 127.0.0.1" | sudo tee /etc/mosquitto/conf.d/default.conf
        sudo systemctl restart mosquitto

    - name: Verify Mosquitto Service
      run: |
        sudo systemctl status mosquitto
        netstat -tuln | grep 1883

    - name: Test Mosquitto
      run: |
        mosquitto_pub -h localhost -p 1883 -t "test/topic" -m "Hello"
        mosquitto_sub -h localhost -p 1883 -t "test/topic" -C 1

    - name: Test .xircuits Workflows
      run: |
        LOG_FILE="${GITHUB_WORKSPACE}/workflow_logs.txt"
        echo "Starting MQTT and Python script test..." > $LOG_FILE
                
        # Run xircuits compile command and log output
        FULL_PATH="${COMPONENT_LIBRARY_PATH}/${TEST_XIRCUITS}"
        echo "Compiling Xircuits workflow: ${FULL_PATH}" >> $LOG_FILE
        xircuits compile $FULL_PATH "${FULL_PATH%.*}.py" 2>&1 | tee -a $LOG_FILE
        
        # Run the Python script in the background
        export PYTHONPATH="${GITHUB_WORKSPACE}:${PYTHONPATH}"
        echo "Running Python script: ${FULL_PATH%.*}.py" >> $LOG_FILE
        python "${FULL_PATH%.*}.py" 2>&1 | tee -a $LOG_FILE &
        PYTHON_PID=$!
        
        # Wait for Python script to start (adjust as needed)
        echo "Waiting 15 seconds for the Python script to initialize..." >> $LOG_FILE
        sleep 15

        # Run MQTT subscriber in the background to listen for "testing_reply" topic
        echo "Starting MQTT subscriber to listen for 'testing_reply' topic..." >> $LOG_FILE
        mosquitto_sub -h localhost -p 1883 -t "testing_reply" -C 1 > output.txt 2>> $LOG_FILE &
        SUB_PID=$!

        # Publish the MQTT message "trigger!!!" to "my/topic"
        echo "Publishing MQTT message 'trigger!!!' to topic 'my/topic'..." >> $LOG_FILE
        mosquitto_pub -h localhost -p 1883 -t "my/topic" -m "trigger!!!" 2>> $LOG_FILE
        sleep 10

        # Wait for the subscriber to receive the message
        echo "Waiting for MQTT subscriber to receive message..." >> $LOG_FILE
        wait $SUB_PID

        # Check if the message matches "trigger!!!"
        if grep -q "trigger!!!" output.txt; then
          echo "MQTT test successful: 'trigger!!!' received." | tee -a $LOG_FILE
        else
          echo "MQTT test failed: 'trigger!!!' not received." | tee -a $LOG_FILE
          # Kill the Python process in case of failure
          if ps -p $PYTHON_PID > /dev/null; then
            echo "Killing Python script process (PID: $PYTHON_PID)..." >> $LOG_FILE
            kill -9 $PYTHON_PID
          fi
          exit 1
        fi

        # Check if the Python script is still running, and if so, kill it
        if ps -p $PYTHON_PID > /dev/null; then
          echo "Python script ran successfully for the duration of the test. Killing the process..." | tee -a $LOG_FILE
          kill -9 $PYTHON_PID
        else
          echo "Python script finished execution before the test completed." | tee -a $LOG_FILE
        fi

        echo "MQTT and Python script test completed." >> $LOG_FILE

    - name: Upload log files
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: mqtt-logs
        path: |
          ${{ github.workspace }}/workflow_logs.txt
          ${{ github.workspace }}/output.txt
